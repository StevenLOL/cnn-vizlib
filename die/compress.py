#!/usr/bin/env python2.7
# encoding: utf-8
'''Take the .pngs generated by the blender script and convert them into a single numpy array.
'''

import numpy as np
import matplotlib.pyplot as plt

import os
import re

VIZLIB_PATH = '../vizlib/data/'

def extract_class(fname):
    regex = r'die_\d+_-?\d+(?:\.\d+)?_\d+(?:\.\d+)__(?P<face>\d)0001.png'
    pattern = re.compile(regex)
    match = pattern.search(fname)
    return match.group('face')

if __name__ == '__main__':
    pngs = [v for v in os.listdir('.') if v.endswith('.png')]
    classes = map(extract_class, pngs)
    imgs = map(plt.imread, pngs)

    # images are of shape NxMxC where the last channel is the alpha channel.
    # this one is always 1, so it is not interesting.
    # To process the images we prefer CxNxM as well. So let's do some reshaping.

    X = np.array([np.rollaxis(img[:, :, :3], 2, 0) for img in imgs])
    y = np.array(classes)
    np.save(os.path.join(VIZLIB_PATH, 'die.X.npy'), X)
    np.save(os.path.join(VIZLIB_PATH, 'die.y.npy'), y)
